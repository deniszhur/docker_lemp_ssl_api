version: "3.5"

services:

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    networks:
      flat-network:
        aliases :
          - $$DOMAIN
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - wp
      - certbot
    env_file: .env
    environment:
      - DOMAIN=$$DOMAIN
       
  wp:
    image: wordpress:latest
    container_name: dev-wp
    restart: always
    depends_on:
      - db
    environment:
      WORDPRESS_CONFIG_EXTRA:

        define('FS_METHOD', 'direct');

        define( 'WP_DEBUG', true );

        define( 'WP_DEBUG_LOG', '/tmp/logs/error.log' );

        define( 'WP_REDIS_HOST', 'redis' );

        define( 'GRAPHQL_DEBUG', true );

    env_file: .env
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./wordpress/logs:/tmp/logs
      - ./wordpress/wp-content/uploads/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - flat-network

  db:
    image: mysql:8.0
    env_file: .env
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_database/mysql:/var/lib/mysql
    networks:
      - flat-network


  myapi:
    depends_on:
      - db
    build: .
    container_name: myapi
    restart: always
    ports:
      - "8000:8000"
    networks:
      - flat-network

networks:
  flat-network:
